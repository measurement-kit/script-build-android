Make sure that we correctly recognize arc4random_addrandom.

diff --git a/configure.ac b/configure.ac
index 7528d37..b3db7ac 100644
--- a/configure.ac
+++ b/configure.ac
@@ -342,6 +342,7 @@ AC_CHECK_FUNCS([ \
   accept4 \
   arc4random \
   arc4random_buf \
+  arc4random_addrandom \
   eventfd \
   epoll_create1 \
   fcntl \
diff --git a/evutil_rand.c b/evutil_rand.c
index 046a14b..3aef9cb 100644
--- a/evutil_rand.c
+++ b/evutil_rand.c
@@ -184,6 +184,24 @@ ev_arc4random_buf(void *buf, size_t n)
 	arc4random_buf(buf, n);
 }
 
+/*
+ * The arc4random included in libevent implements arc4random_addrandom().
+ *
+ * OpenBSD libc/crypt/arc4random.c migrated to ChaCha20 since 1.25 and
+ * have removed arc4random_addrandom() since 1.26. Since then, other libcs
+ * followed suit (e.g. Android's own libc). But libevent's arc4random.c
+ * copy still implement arc4random_addrandom().
+ *
+ * See also:
+ *
+ * - https://github.com/measurement-kit/libevent/commit/8b275d967d7ffd95d5cc12069aef35669126c6d9
+ * - https://bugzilla.mozilla.org/show_bug.cgi?id=931354
+ * - https://bug931354.bmoattachments.org/attachment.cgi?id=829728
+ */
+#ifndef EVENT__HAVE_ARC4RANDOM_ADDRANDOM
+#define EVENT__HAVE_ARC4RANDOM_ADDRANDOM 1
+#endif
+
 #endif /* } !EVENT__HAVE_ARC4RANDOM */
 
 void
@@ -195,8 +213,10 @@ evutil_secure_rng_get_bytes(void *buf, size_t n)
 void
 evutil_secure_rng_add_bytes(const char *buf, size_t n)
 {
+#if defined EVENT__HAVE_ARC4RANDOM_ADDRANDOM
 	arc4random_addrandom((unsigned char*)buf,
 	    n>(size_t)INT_MAX ? INT_MAX : (int)n);
+#endif
 }
 
 void
